// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Product {
    id          String        @id @default(cuid())
    name        String
    description String
    price       Decimal
    imagePaths  Json
    status      ProductStatus @default(AVAILABLE)
    properties  String[]      @default([])
    createdAt   DateTime      @default(now())
    updatedAt   DateTime      @updatedAt

    productCategories ProductCategory[] // Many-to-many relationship
    orders            Order[]
}

enum ProductStatus {
    AVAILABLE
    SOLD_OUT
    ON_HOLD
    COMING_SOON
}

model Category {
    id   String @id @default(cuid())
    name String

    productCategories ProductCategory[] // Many-to-many relationship
}

model ProductCategory {
    productId  String
    categoryId String

    product  Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
    category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

    @@id([productId, categoryId]) // Composite primary key
}

model User {
    id         String         @id @default(cuid())
    email      String         @unique
    permission UserPermission @default(NORMAL_USER)
    createdAt  DateTime       @default(now())
    updatedAt  DateTime       @updatedAt

    orders Order[]
}

enum UserPermission {
    NORMAL_USER
    ADMIN_USER
    SUPER_ADMIN
}

model Order {
    id        String   @id @default(cuid())
    pricePaid Decimal
    status    String   @default("pending")
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    userId    String
    productId String
    user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    product   Product @relation(fields: [productId], references: [id], onDelete: Restrict)
}
